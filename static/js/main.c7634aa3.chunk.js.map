{"version":3,"sources":["Components/ToDo.js","Components/NewTodo.js","Components/left_side_options.js","Components/NameandTime.js","Components/OptionsDropDownMenu.js","App.js","serviceWorker.js","index.js"],"names":["ToDo","props","id","className","type","checked","completed","onChange","handleChange","text","value","makeimportant","onClick","deletebtn","src","alt","NewTodo","placeholder","onKeyUp","event","keyCode","which","preventDefault","document","querySelector","click","submit","LeftsideOptions","Fragment","alltasksFilter","importantFilter","NameandTime","class","name","tdate","Date","dayr","day","getDay","months","month","getMonth","date","getDate","getDatesr","DropDownMenu","menuContent","style","display","App","state","List","originalList","identity","description","important","IDS","completedTasks","importantList","displayingPart","bind","addItem","deleteItem","important_filter","alltasks_filter","this","console","log","newIds","i","newTask","task","undefined","includes","push","todolist","map","j","unshift","table","setState","prevState","h","length","splice","todolist1","r","todocompo","backgroundColor","setTimeout","prev1","todosComponent","toodo","key","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c7634aa3.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction ToDo(props) {\r\n  return (\r\n    <div id={`${props.id}div`} className=\"each-todo-div\">\r\n      <input\r\n        type=\"checkbox\"\r\n        checked={props.completed}\r\n        className=\"todo-input\"\r\n        onChange={() => props.handleChange(props.id)}\r\n      />\r\n      <span>{props.text}</span>\r\n      <div className=\"todo-important-part\">\r\n        <input\r\n          type=\"checkbox\"\r\n          value=\"important\"\r\n          onChange={() => props.makeimportant(props.id)}\r\n        />\r\n        <label>Important</label>\r\n      </div>\r\n      <button\r\n        className=\"delete-btn\"\r\n        onClick={() => {\r\n          props.deletebtn(props.id);\r\n        }}\r\n      >\r\n        <img src=\"./trash.svg\" alt=\"delete\"></img>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ToDo;\r\n","import React from \"react\";\r\n\r\nfunction NewTodo(props) {\r\n  return (\r\n    <div className=\"new-task-div\">\r\n      <input\r\n        placeholder=\"Add a Task\"\r\n        className=\"new-task-input\"\r\n        onKeyUp={(event) => {\r\n          if (event.keyCode === 13 || event.which === 13) {\r\n            event.preventDefault();\r\n            document.querySelector(\".submit-btn\").click();\r\n          }\r\n        }}\r\n      />\r\n      <button\r\n        type=\"submit\"\r\n        onClick={() => {\r\n          props.submit();\r\n        }}\r\n        className=\"submit-btn\"\r\n      >\r\n        Submit\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewTodo;\r\n","import React, { Component } from \"react\";\r\n\r\nfunction LeftsideOptions(props) {\r\n  return (\r\n    <React.Fragment>\r\n      <button\r\n        onClick={() => props.alltasksFilter(props.id)}\r\n        className=\"button myday-btn\"\r\n      >\r\n        My Day\r\n      </button>\r\n      <button\r\n        onClick={() => props.importantFilter(props.id)}\r\n        className=\"button important-btn\"\r\n      >\r\n        Important\r\n      </button>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default LeftsideOptions;\r\n","import React, { Component } from \"react\";\r\n\r\nfunction getDatesr() {\r\n  let tdate = new Date();\r\n  let dayr = [];\r\n  dayr[0] = \"Sunday\";\r\n  dayr[1] = \"Monday\";\r\n  dayr[2] = \"Tuesday\";\r\n  dayr[3] = \"Wednesday\";\r\n  dayr[4] = \"Thursday\";\r\n  dayr[5] = \"Friday\";\r\n  dayr[6] = \"Saturday\";\r\n\r\n  let day = dayr[tdate.getDay()];\r\n  let months = [];\r\n  months[0] = \"January\";\r\n  months[1] = \"February\";\r\n  months[2] = \"March\";\r\n  months[3] = \"April\";\r\n  months[4] = \"May\";\r\n  months[5] = \"June\";\r\n  months[6] = \"July\";\r\n  months[7] = \"August\";\r\n  months[8] = \"September\";\r\n  months[9] = \"October\";\r\n  months[10] = \"November\";\r\n  months[11] = \"December\";\r\n  let month = months[tdate.getMonth()];\r\n  let date = tdate.getDate();\r\n\r\n  return `${day}  ${month} , ${date}`;\r\n  //   document.querySelector(\".date\").innerHTML = `${day}  ${month} , ${date}`;\r\n}\r\nfunction NameandTime(props) {\r\n  return (\r\n    <div class=\"name-and-time-div\">\r\n      <h3>{props.name}</h3>\r\n      <label class=\"date\">{getDatesr()}</label>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NameandTime;\r\n","import React from \"react\";\r\n\r\nfunction DropDownMenu() {\r\n  return (\r\n    <div class=\"dropdown-menu\">\r\n      <button\r\n        class=\"menu-btn\"\r\n        onClick={() => {\r\n          let dropdownBtn = document.querySelector(\".menu-btn\");\r\n          let menuContent = document.querySelector(\".menu-content\");\r\n          if (menuContent.style.display === \"\") {\r\n            menuContent.style.display = \"flex\";\r\n          } else {\r\n            menuContent.style.display = \"\";\r\n          }\r\n        }}\r\n      >\r\n        Filter <img src=\"./chevron-down.svg\" alt=\"chevron-down\"></img>\r\n      </button>\r\n      <div class=\"menu-content\">\r\n        <button\r\n          className=\"dropdown-myday-btn\"\r\n          onClick={() => {\r\n            document.querySelector(\".myday-btn\").click();\r\n            document.querySelector(\".menu-content\").style.display = \"none\";\r\n          }}\r\n        >\r\n          My Day\r\n        </button>\r\n        <button\r\n          className=\"dropdown-important-btn\"\r\n          onClick={() => {\r\n            document.querySelector(\".important-btn\").click();\r\n            document.querySelector(\".menu-content\").style.display = \"none\";\r\n          }}\r\n        >\r\n          Important\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DropDownMenu;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport ToDo from \"./Components/ToDo.js\";\r\nimport ListofTodos from \"./Components/TodoList.js\";\r\nimport NewTodo from \"./Components/NewTodo.js\";\r\nimport LeftSideOptions from \"./Components/left_side_options.js\";\r\nimport NameandTime from \"./Components/NameandTime.js\";\r\nimport DropDownMenu from \"./Components/OptionsDropDownMenu.js\";\r\n\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      List: [],\r\n      originalList: [\r\n        {\r\n          type: \"todo\",\r\n          name: \"call boss\",\r\n          completed: false,\r\n          identity: 1,\r\n          description: \"this is a todo\",\r\n          important: false,\r\n        },\r\n        {\r\n          type: \"task\",\r\n          name: \"complete work\",\r\n          completed: false,\r\n          identity: 2,\r\n          description: \"this is a task\",\r\n          important: false,\r\n        },\r\n      ],\r\n      IDS: [1, 2],\r\n      completedTasks: [],\r\n      importantList: [],\r\n      displayingPart: \"\",\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.addItem = this.addItem.bind(this);\r\n    this.deleteItem = this.deleteItem.bind(this);\r\n    this.makeimportant = this.makeimportant.bind(this);\r\n    this.important_filter = this.important_filter.bind(this);\r\n    this.alltasks_filter = this.alltasks_filter.bind(this);\r\n  }\r\n  //-------------------------------------------------adding new todo\r\n  componentDidMount() {\r\n    this.alltasks_filter();\r\n  }\r\n  addItem() {\r\n    console.log(\"new item added\");\r\n    // let id = Math.floor(Math.random() * 10);\r\n    let newIds = this.state.IDS;\r\n    let i = null;\r\n\r\n    let newTask = document.querySelector(\".new-task-input\").value;\r\n    let task = {};\r\n    if (newTask === \"\" || newTask === undefined) {\r\n      console.log(\"nothing to add\");\r\n    } else {\r\n      for (i = 1; i <= 1000; i++) {\r\n        if (this.state.IDS.includes(i)) {\r\n          console.log(\"includes\");\r\n          continue;\r\n        } else if (this.state.IDS.includes(i) === false) {\r\n          console.log(i);\r\n          newIds.push(i);\r\n          console.log(this.state.IDS);\r\n          break;\r\n        }\r\n      }\r\n      task.type = \"todo\";\r\n      task.name = newTask;\r\n      task.completed = false;\r\n      task.identity = i;\r\n      let todolist = this.state.originalList.map((j) => {\r\n        return j;\r\n      });\r\n      todolist.unshift(task);\r\n      console.table(todolist);\r\n      this.setState((prevState) => {\r\n        return { originalList: todolist };\r\n      });\r\n      console.table(\"addItem console\" + this.state.List);\r\n    }\r\n    // this.alltasks_filter();\r\n    document.querySelector(\".new-task-input\").value = \"\";\r\n    this.alltasks_filter();\r\n  }\r\n\r\n  //---------------------------------------------------checkbox change handler--------\r\n\r\n  handleChange(id) {\r\n    console.log(id);\r\n    // let completedTask = null;\r\n    let todolist = this.state.originalList.map((j) => {\r\n      return j;\r\n    });\r\n    // console.log(todolist.length);\r\n    for (let h = 0; h < todolist.length; h++) {\r\n      // console.log(\"entered into for loop\", todolist[h].identity);\r\n      if (todolist[h].identity === id) {\r\n        todolist[h].completed = !todolist[h].completed;\r\n        // let completedTask = todolist[h];          // reordering part\r\n        // todolist.splice(h, 1);\r\n        // todolist.push(completedTask);\r\n        // console.log(\"clicked one\", todolist[h].completed);\r\n        break;\r\n      }\r\n    }\r\n\r\n    this.setState((prevState) => {\r\n      return { originalList: todolist };\r\n    });\r\n    this.alltasks_filter();\r\n    // this.reorderCompletedTasks();\r\n    // console.table(this.state.List);\r\n  }\r\n  deleteItem(id) {\r\n    //            there is a error check it\r\n    // document.getElementById(id + \"div\").style.display = \"none\";\r\n    let todolist = this.state.originalList.map((j) => {\r\n      return j;\r\n    });\r\n    for (let h = 1; h <= todolist.length; h++) {\r\n      console.log(\"entered into for loop\", todolist[h - 1].identity);\r\n      if (todolist[h - 1].identity === id) {\r\n        todolist.splice(h - 1, 1);\r\n        console.log(\"has to be deleted\", h - 1);\r\n        console.table(todolist);\r\n      }\r\n    }\r\n\r\n    this.setState((prevState) => {\r\n      return { originalList: todolist };\r\n    });\r\n    this.alltasks_filter();\r\n    console.table(this.state.List);\r\n  }\r\n  reorderCompletedTasks() {\r\n    let todolist = this.state.originalList.map((j) => {\r\n      return j;\r\n    });\r\n    for (let h = 0; h < todolist.length; h++) {\r\n      if (todolist[h].completed) {\r\n        todolist.push(todolist[h]);\r\n        todolist.splice(h, 1);\r\n      }\r\n    }\r\n    this.setState((prevState) => {\r\n      return { List: todolist };\r\n    });\r\n  }\r\n  makeimportant(id) {\r\n    let todolist = this.state.originalList.map((j) => {\r\n      return j;\r\n    });\r\n    // console.log(todolist.length);\r\n    for (let h = 0; h < todolist.length; h++) {\r\n      // console.log(\"entered into for loop\", todolist[h].identity);\r\n      if (todolist[h].identity === id) {\r\n        todolist[h].important = !todolist[h].important;\r\n        // let completedTask = todolist[h];          // reordering part\r\n        // todolist.splice(h, 1);\r\n        // todolist.push(completedTask);\r\n        console.log(\"making this important\", todolist[h].name);\r\n        break;\r\n      }\r\n    }\r\n\r\n    this.setState((prevState) => {\r\n      return { originalList: todolist };\r\n    });\r\n    this.alltasks_filter();\r\n  }\r\n\r\n  important_filter() {\r\n    let todolist1 = this.state.originalList.map((r) => {\r\n      return r;\r\n    });\r\n    let todocompo = [];\r\n    for (let j = 0; j < todolist1.length; j++) {\r\n      if (todolist1[j].important) {\r\n        todocompo.push(todolist1[j]);\r\n      }\r\n    }\r\n    document.querySelector(\".myday-btn\").style.backgroundColor = \"white\";\r\n    document.querySelector(\".important-btn\").style.backgroundColor = \"grey\";\r\n    setTimeout(() => {\r\n      this.setState((prev1) => {\r\n        return { List: todocompo, displayingPart: \"Important\" };\r\n      });\r\n    }, 300);\r\n  }\r\n\r\n  alltasks_filter() {\r\n    document.querySelector(\".myday-btn\").style.backgroundColor = \"grey\";\r\n    document.querySelector(\".important-btn\").style.backgroundColor = \"white\";\r\n    setTimeout(() => {\r\n      this.setState((prev1) => {\r\n        return { List: this.state.originalList, displayingPart: \"My Day\" };\r\n      });\r\n    }, 300);\r\n  }\r\n\r\n  render() {\r\n    const todosComponent = this.state.List.map((toodo) => {\r\n      return (\r\n        <li key={toodo.identity}>\r\n          <ToDo\r\n            completed={toodo.completed}\r\n            id={toodo.identity}\r\n            text={toodo.name}\r\n            handleChange={this.handleChange}\r\n            deletebtn={this.deleteItem}\r\n            important={toodo.important}\r\n            makeimportant={this.makeimportant}\r\n          />\r\n        </li>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"header\">\r\n          <h1>Todo</h1>\r\n        </header>\r\n\r\n        <div className=\"main-part\">\r\n          <div className=\"options-part\">\r\n            <LeftSideOptions\r\n              importantFilter={this.important_filter}\r\n              alltasksFilter={this.alltasks_filter}\r\n            />\r\n          </div>\r\n          <div className=\"todo-part\">\r\n            <div className=\"date-and-dropdown-div\">\r\n              <NameandTime name={this.state.displayingPart} />\r\n              <DropDownMenu />\r\n            </div>\r\n\r\n            <NewTodo submit={this.addItem} />\r\n\r\n            <div className=\"todo-list\">\r\n              <ul className=\"todo-ul-list\">{todosComponent}</ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n// serviceWorker.unregister();\n"],"sourceRoot":""}